import time, doctest
class Solution:
    '''
     @return a list of lists of length 3, [[val1,val2,val3]]

    '''
    def threeSum(self, num):
        '''

        >>> a = [7,-1,14,-12,-8,7,2,-15,8,8,-8,-14,-4,-5,7,9,11,-4,-15,-6,1,-14,4,
        ...      3,10,-5,2,1,6,11,2,-2,-5,-7,-6,2,-15,11,-6,8,-4,2,1,-1,4,-6,-15,1,
        ...      5,-15,10,14,9,-8,-6,4,-6,11,12,-15,7,-1,-9,9,-1,0,-4,-1,-12,-2,14,
        ...      -9,7,0,-3,-4,1,-2,12,14,-10,0,5,14,-1,14,3,8,10,-8,8,-5,-2,6,-11,
        ...      12,13,-7,-12,8,6,-13,14,-2,-5,-11,1,3,-6]
        >>> test = Solution()
        >>> test.threeSum(a)
        [[-15, 3, 12], [-8, -2, 10], [-7, 2, 5], [-13, 6, 7], [-9, -1, 10], [-2, -2, 4], [-7, -6, 13], [-3, -2, 5], [-7, 3, 4], [-14, 2, 12], [-12, 4, 8], [-12, 3, 9], [-13, 3, 10], [-5, -1, 6], [-12, 5, 7], [-11, -2, 13], [-10, 0, 10], [-9, 2, 7], [-7, -3, 10], [-8, 0, 8], [-15, 7, 8], [-13, 1, 12], [-11, 1, 10], [-5, -4, 9], [-13, -1, 14], [-8, 1, 7], [-6, 3, 3], [-8, -3, 11], [-14, 5, 9], [-2, 1, 1], [-3, 1, 2], [-4, -1, 5], [-12, 2, 10], [-12, -1, 13], [-10, 5, 5], [-7, -2, 9], [-10, -2, 12], [-13, 0, 13], [-11, 2, 9], [-9, 4, 5], [-7, -5, 12], [-5, -3, 8], [-4, 2, 2], [-9, 3, 6], [-6, 2, 4], [-5, 0, 5], [-8, -4, 12], [-14, 4, 10], [-2, 0, 2], [-5, 1, 4], [-2, -1, 3], [-6, -5, 11], [-9, 0, 9], [-14, 1, 13], [-12, 1, 11], [-10, 3, 7], [-8, -1, 9], [-11, 3, 8], [-10, 4, 6], [-6, -2, 8], [-4, 1, 3], [-3, -1, 4], [-9, -2, 11], [-13, 4, 9], [-15, 1, 14], [-8, -5, 13], [-11, 4, 7], [-11, -1, 12], [-8, 4, 4], [-15, 4, 11], [-9, 1, 8], [-5, -2, 7], [-6, -6, 12], [-7, 0, 7], [-14, 0, 14], [-12, 0, 12], [-10, 2, 8], [-10, -3, 13], [-5, -5, 10], [-10, -1, 11], [-4, 0, 4], [-13, 5, 8], [-15, 2, 13], [-6, 1, 5], [-14, 7, 7], [-8, -6, 14], [-4, -2, 6], [-6, -3, 9], [-7, -1, 8], [-6, -1, 7], [-11, 5, 6], [-8, 3, 5], [-9, -3, 12], [-15, 5, 10], [-12, -2, 14], [-1, 0, 1], [-7, 1, 6], [-10, -4, 14], [-13, 2, 11], [-14, 3, 11], [-7, -7, 14], [-12, 6, 6], [-4, -4, 8], [-7, -4, 11], [0, 0, 0], [-10, 1, 9], [-6, 0, 6], [-14, 6, 8], [-11, 0, 11], [-5, 2, 3], [-1, -1, 2], [-11, -3, 14], [-4, -3, 7], [-6, -4, 10], [-9, -4, 13], [-8, 2, 6], [-15, 6, 9], [-3, 0, 3], [-9, -5, 14]]

        '''
        num.sort()
        pos_i = 0
        res = set()
        for i in num:
            if i>=0:
                break
            pos_i += 1
        if pos_i==len(num):
            return []

        for i in range(pos_i):
            j = i+1
            k = len(num)-1
            if i>0 and num[i]==num[i-1]:
                continue
            while k>=pos_i and j<k:
                tmp = (num[i],num[j],num[k])
                s = sum(tmp)
                if s>0:
                    k -= 1
                elif s<0:
                    j += 1
                else:
                    res.add(tmp)
                    j += 1
                    k -= 1
        # special case: (0,0,0)
        if num[pos_i]==0:
            if len(num)-pos_i>=3 and num[pos_i+1]==0 and num[pos_i+2]==0:
                res.add((0,0,0))
        # result = [list(t) for t in res]


        return list(map(list, res))
        # return sorted(result, key= lambda x:x[0])

# t1 = time.time()
# test = Solution()
# a = [7,-1,14,-12,-8,7,2,-15,8,8,-8,-14,-4,-5,7,9,11,-4,-15,-6,1,-14,4,
#      3,10,-5,2,1,6,11,2,-2,-5,-7,-6,2,-15,11,-6,8,-4,2,1,-1,4,-6,-15,1,
#      5,-15,10,14,9,-8,-6,4,-6,11,12,-15,7,-1,-9,9,-1,0,-4,-1,-12,-2,14,
#      -9,7,0,-3,-4,1,-2,12,14,-10,0,5,14,-1,14,3,8,10,-8,8,-5,-2,6,-11,
#      12,13,-7,-12,8,6,-13,14,-2,-5,-11,1,3,-6]
# a = [6,-5,-6,-1,-2,8,-1,4,-10,-8,-10,-2,-4,-1,-8,-2,8,9,-5,-2,-8,-9,-3,-5]
# a = [-1,-3,4]
# res = test.threeSum(a)
# for r in res:
#     print(r)
#
# t2 = time.time()
# print(t2-t1)

doctest.testmod()